/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        get: {
            responses: {
                /** OK */
                200: unknown;
            };
        };
    };
    "/attribute_type_trait_type": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_type_trait_type.id"];
                    created_at?: parameters["rowFilter.attribute_type_trait_type.created_at"];
                    attribute_type_id?: parameters["rowFilter.attribute_type_trait_type.attribute_type_id"];
                    attribute_trait_id?: parameters["rowFilter.attribute_type_trait_type.attribute_trait_id"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["attribute_type_trait_type"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** attribute_type_trait_type */
                    attribute_type_trait_type?: definitions["attribute_type_trait_type"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_type_trait_type.id"];
                    created_at?: parameters["rowFilter.attribute_type_trait_type.created_at"];
                    attribute_type_id?: parameters["rowFilter.attribute_type_trait_type.attribute_type_id"];
                    attribute_trait_id?: parameters["rowFilter.attribute_type_trait_type.attribute_trait_id"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_type_trait_type.id"];
                    created_at?: parameters["rowFilter.attribute_type_trait_type.created_at"];
                    attribute_type_id?: parameters["rowFilter.attribute_type_trait_type.attribute_type_id"];
                    attribute_trait_id?: parameters["rowFilter.attribute_type_trait_type.attribute_trait_id"];
                };
                body: {
                    /** attribute_type_trait_type */
                    attribute_type_trait_type?: definitions["attribute_type_trait_type"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/attribute_type": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_type.id"];
                    created_at?: parameters["rowFilter.attribute_type.created_at"];
                    name?: parameters["rowFilter.attribute_type.name"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["attribute_type"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** attribute_type */
                    attribute_type?: definitions["attribute_type"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_type.id"];
                    created_at?: parameters["rowFilter.attribute_type.created_at"];
                    name?: parameters["rowFilter.attribute_type.name"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_type.id"];
                    created_at?: parameters["rowFilter.attribute_type.created_at"];
                    name?: parameters["rowFilter.attribute_type.name"];
                };
                body: {
                    /** attribute_type */
                    attribute_type?: definitions["attribute_type"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/room": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.room.id"];
                    created_at?: parameters["rowFilter.room.created_at"];
                    inspection_id?: parameters["rowFilter.room.inspection_id"];
                    room_type_id?: parameters["rowFilter.room.room_type_id"];
                    name?: parameters["rowFilter.room.name"];
                    description?: parameters["rowFilter.room.description"];
                    notes?: parameters["rowFilter.room.notes"];
                    house_id?: parameters["rowFilter.room.house_id"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["room"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** room */
                    room?: definitions["room"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.room.id"];
                    created_at?: parameters["rowFilter.room.created_at"];
                    inspection_id?: parameters["rowFilter.room.inspection_id"];
                    room_type_id?: parameters["rowFilter.room.room_type_id"];
                    name?: parameters["rowFilter.room.name"];
                    description?: parameters["rowFilter.room.description"];
                    notes?: parameters["rowFilter.room.notes"];
                    house_id?: parameters["rowFilter.room.house_id"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.room.id"];
                    created_at?: parameters["rowFilter.room.created_at"];
                    inspection_id?: parameters["rowFilter.room.inspection_id"];
                    room_type_id?: parameters["rowFilter.room.room_type_id"];
                    name?: parameters["rowFilter.room.name"];
                    description?: parameters["rowFilter.room.description"];
                    notes?: parameters["rowFilter.room.notes"];
                    house_id?: parameters["rowFilter.room.house_id"];
                };
                body: {
                    /** room */
                    room?: definitions["room"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/inspection": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.inspection.id"];
                    created_at?: parameters["rowFilter.inspection.created_at"];
                    house_id?: parameters["rowFilter.inspection.house_id"];
                    inspector_id?: parameters["rowFilter.inspection.inspector_id"];
                    inspection_date?: parameters["rowFilter.inspection.inspection_date"];
                    notes?: parameters["rowFilter.inspection.notes"];
                    inspection_status_id?: parameters["rowFilter.inspection.inspection_status_id"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["inspection"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** inspection */
                    inspection?: definitions["inspection"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.inspection.id"];
                    created_at?: parameters["rowFilter.inspection.created_at"];
                    house_id?: parameters["rowFilter.inspection.house_id"];
                    inspector_id?: parameters["rowFilter.inspection.inspector_id"];
                    inspection_date?: parameters["rowFilter.inspection.inspection_date"];
                    notes?: parameters["rowFilter.inspection.notes"];
                    inspection_status_id?: parameters["rowFilter.inspection.inspection_status_id"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.inspection.id"];
                    created_at?: parameters["rowFilter.inspection.created_at"];
                    house_id?: parameters["rowFilter.inspection.house_id"];
                    inspector_id?: parameters["rowFilter.inspection.inspector_id"];
                    inspection_date?: parameters["rowFilter.inspection.inspection_date"];
                    notes?: parameters["rowFilter.inspection.notes"];
                    inspection_status_id?: parameters["rowFilter.inspection.inspection_status_id"];
                };
                body: {
                    /** inspection */
                    inspection?: definitions["inspection"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/house": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.house.id"];
                    created_at?: parameters["rowFilter.house.created_at"];
                    address?: parameters["rowFilter.house.address"];
                    notes?: parameters["rowFilter.house.notes"];
                    construct_date?: parameters["rowFilter.house.construct_date"];
                    photo_url?: parameters["rowFilter.house.photo_url"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["house"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** house */
                    house?: definitions["house"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.house.id"];
                    created_at?: parameters["rowFilter.house.created_at"];
                    address?: parameters["rowFilter.house.address"];
                    notes?: parameters["rowFilter.house.notes"];
                    construct_date?: parameters["rowFilter.house.construct_date"];
                    photo_url?: parameters["rowFilter.house.photo_url"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.house.id"];
                    created_at?: parameters["rowFilter.house.created_at"];
                    address?: parameters["rowFilter.house.address"];
                    notes?: parameters["rowFilter.house.notes"];
                    construct_date?: parameters["rowFilter.house.construct_date"];
                    photo_url?: parameters["rowFilter.house.photo_url"];
                };
                body: {
                    /** house */
                    house?: definitions["house"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/attribute_trait": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_trait.id"];
                    created_at?: parameters["rowFilter.attribute_trait.created_at"];
                    attribute_trait_type_id?: parameters["rowFilter.attribute_trait.attribute_trait_type_id"];
                    value?: parameters["rowFilter.attribute_trait.value"];
                    notes?: parameters["rowFilter.attribute_trait.notes"];
                    attribute_id?: parameters["rowFilter.attribute_trait.attribute_id"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["attribute_trait"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** attribute_trait */
                    attribute_trait?: definitions["attribute_trait"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_trait.id"];
                    created_at?: parameters["rowFilter.attribute_trait.created_at"];
                    attribute_trait_type_id?: parameters["rowFilter.attribute_trait.attribute_trait_type_id"];
                    value?: parameters["rowFilter.attribute_trait.value"];
                    notes?: parameters["rowFilter.attribute_trait.notes"];
                    attribute_id?: parameters["rowFilter.attribute_trait.attribute_id"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_trait.id"];
                    created_at?: parameters["rowFilter.attribute_trait.created_at"];
                    attribute_trait_type_id?: parameters["rowFilter.attribute_trait.attribute_trait_type_id"];
                    value?: parameters["rowFilter.attribute_trait.value"];
                    notes?: parameters["rowFilter.attribute_trait.notes"];
                    attribute_id?: parameters["rowFilter.attribute_trait.attribute_id"];
                };
                body: {
                    /** attribute_trait */
                    attribute_trait?: definitions["attribute_trait"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/room_type": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.room_type.id"];
                    created_at?: parameters["rowFilter.room_type.created_at"];
                    name?: parameters["rowFilter.room_type.name"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["room_type"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** room_type */
                    room_type?: definitions["room_type"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.room_type.id"];
                    created_at?: parameters["rowFilter.room_type.created_at"];
                    name?: parameters["rowFilter.room_type.name"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.room_type.id"];
                    created_at?: parameters["rowFilter.room_type.created_at"];
                    name?: parameters["rowFilter.room_type.name"];
                };
                body: {
                    /** room_type */
                    room_type?: definitions["room_type"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/photo": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.photo.id"];
                    created_at?: parameters["rowFilter.photo.created_at"];
                    room_id?: parameters["rowFilter.photo.room_id"];
                    attribute_id?: parameters["rowFilter.photo.attribute_id"];
                    notes?: parameters["rowFilter.photo.notes"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["photo"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** photo */
                    photo?: definitions["photo"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.photo.id"];
                    created_at?: parameters["rowFilter.photo.created_at"];
                    room_id?: parameters["rowFilter.photo.room_id"];
                    attribute_id?: parameters["rowFilter.photo.attribute_id"];
                    notes?: parameters["rowFilter.photo.notes"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.photo.id"];
                    created_at?: parameters["rowFilter.photo.created_at"];
                    room_id?: parameters["rowFilter.photo.room_id"];
                    attribute_id?: parameters["rowFilter.photo.attribute_id"];
                    notes?: parameters["rowFilter.photo.notes"];
                };
                body: {
                    /** photo */
                    photo?: definitions["photo"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/inspection_status": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.inspection_status.id"];
                    created_at?: parameters["rowFilter.inspection_status.created_at"];
                    value?: parameters["rowFilter.inspection_status.value"];
                    description?: parameters["rowFilter.inspection_status.description"];
                    name?: parameters["rowFilter.inspection_status.name"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["inspection_status"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** inspection_status */
                    inspection_status?: definitions["inspection_status"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.inspection_status.id"];
                    created_at?: parameters["rowFilter.inspection_status.created_at"];
                    value?: parameters["rowFilter.inspection_status.value"];
                    description?: parameters["rowFilter.inspection_status.description"];
                    name?: parameters["rowFilter.inspection_status.name"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.inspection_status.id"];
                    created_at?: parameters["rowFilter.inspection_status.created_at"];
                    value?: parameters["rowFilter.inspection_status.value"];
                    description?: parameters["rowFilter.inspection_status.description"];
                    name?: parameters["rowFilter.inspection_status.name"];
                };
                body: {
                    /** inspection_status */
                    inspection_status?: definitions["inspection_status"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/profile": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.profile.id"];
                    updated_at?: parameters["rowFilter.profile.updated_at"];
                    username?: parameters["rowFilter.profile.username"];
                    avatar_url?: parameters["rowFilter.profile.avatar_url"];
                    website?: parameters["rowFilter.profile.website"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["profile"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** profile */
                    profile?: definitions["profile"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.profile.id"];
                    updated_at?: parameters["rowFilter.profile.updated_at"];
                    username?: parameters["rowFilter.profile.username"];
                    avatar_url?: parameters["rowFilter.profile.avatar_url"];
                    website?: parameters["rowFilter.profile.website"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.profile.id"];
                    updated_at?: parameters["rowFilter.profile.updated_at"];
                    username?: parameters["rowFilter.profile.username"];
                    avatar_url?: parameters["rowFilter.profile.avatar_url"];
                    website?: parameters["rowFilter.profile.website"];
                };
                body: {
                    /** profile */
                    profile?: definitions["profile"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/attribute_trait_type": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_trait_type.id"];
                    created_at?: parameters["rowFilter.attribute_trait_type.created_at"];
                    name?: parameters["rowFilter.attribute_trait_type.name"];
                    description?: parameters["rowFilter.attribute_trait_type.description"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["attribute_trait_type"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** attribute_trait_type */
                    attribute_trait_type?: definitions["attribute_trait_type"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_trait_type.id"];
                    created_at?: parameters["rowFilter.attribute_trait_type.created_at"];
                    name?: parameters["rowFilter.attribute_trait_type.name"];
                    description?: parameters["rowFilter.attribute_trait_type.description"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute_trait_type.id"];
                    created_at?: parameters["rowFilter.attribute_trait_type.created_at"];
                    name?: parameters["rowFilter.attribute_trait_type.name"];
                    description?: parameters["rowFilter.attribute_trait_type.description"];
                };
                body: {
                    /** attribute_trait_type */
                    attribute_trait_type?: definitions["attribute_trait_type"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/condition": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.condition.id"];
                    created_at?: parameters["rowFilter.condition.created_at"];
                    name?: parameters["rowFilter.condition.name"];
                    description?: parameters["rowFilter.condition.description"];
                    value?: parameters["rowFilter.condition.value"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["condition"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** condition */
                    condition?: definitions["condition"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.condition.id"];
                    created_at?: parameters["rowFilter.condition.created_at"];
                    name?: parameters["rowFilter.condition.name"];
                    description?: parameters["rowFilter.condition.description"];
                    value?: parameters["rowFilter.condition.value"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.condition.id"];
                    created_at?: parameters["rowFilter.condition.created_at"];
                    name?: parameters["rowFilter.condition.name"];
                    description?: parameters["rowFilter.condition.description"];
                    value?: parameters["rowFilter.condition.value"];
                };
                body: {
                    /** condition */
                    condition?: definitions["condition"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
    "/attribute": {
        get: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute.id"];
                    created_at?: parameters["rowFilter.attribute.created_at"];
                    room_id?: parameters["rowFilter.attribute.room_id"];
                    condition_id?: parameters["rowFilter.attribute.condition_id"];
                    notes?: parameters["rowFilter.attribute.notes"];
                    attribute_type_id?: parameters["rowFilter.attribute.attribute_type_id"];
                    /** Filtering Columns */
                    select?: parameters["select"];
                    /** Ordering */
                    order?: parameters["order"];
                    /** Limiting and Pagination */
                    offset?: parameters["offset"];
                    /** Limiting and Pagination */
                    limit?: parameters["limit"];
                };
                header: {
                    /** Limiting and Pagination */
                    Range?: parameters["range"];
                    /** Limiting and Pagination */
                    "Range-Unit"?: parameters["rangeUnit"];
                    /** Preference */
                    Prefer?: parameters["preferCount"];
                };
            };
            responses: {
                /** OK */
                200: {
                    schema: definitions["attribute"][];
                };
                /** Partial Content */
                206: unknown;
            };
        };
        post: {
            parameters: {
                body: {
                    /** attribute */
                    attribute?: definitions["attribute"];
                };
                query: {
                    /** Filtering Columns */
                    select?: parameters["select"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** Created */
                201: unknown;
            };
        };
        delete: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute.id"];
                    created_at?: parameters["rowFilter.attribute.created_at"];
                    room_id?: parameters["rowFilter.attribute.room_id"];
                    condition_id?: parameters["rowFilter.attribute.condition_id"];
                    notes?: parameters["rowFilter.attribute.notes"];
                    attribute_type_id?: parameters["rowFilter.attribute.attribute_type_id"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
        patch: {
            parameters: {
                query: {
                    id?: parameters["rowFilter.attribute.id"];
                    created_at?: parameters["rowFilter.attribute.created_at"];
                    room_id?: parameters["rowFilter.attribute.room_id"];
                    condition_id?: parameters["rowFilter.attribute.condition_id"];
                    notes?: parameters["rowFilter.attribute.notes"];
                    attribute_type_id?: parameters["rowFilter.attribute.attribute_type_id"];
                };
                body: {
                    /** attribute */
                    attribute?: definitions["attribute"];
                };
                header: {
                    /** Preference */
                    Prefer?: parameters["preferReturn"];
                };
            };
            responses: {
                /** No Content */
                204: never;
            };
        };
    };
}

export interface definitions {
    attribute_type_trait_type: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `attribute_type.id`.<fk table='attribute_type' column='id'/>
         */
        attribute_type_id?: number;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `attribute_trait_type.id`.<fk table='attribute_trait_type' column='id'/>
         */
        attribute_trait_id?: number;
    };
    attribute_type: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /** Format: character varying */
        name?: string;
    };
    room: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `inspection.id`.<fk table='inspection' column='id'/>
         */
        inspection_id?: number;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `room_type.id`.<fk table='room_type' column='id'/>
         */
        room_type_id?: number;
        /** Format: character varying */
        name?: string;
        /** Format: character varying */
        description?: string;
        /** Format: character varying */
        notes?: string;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `house.id`.<fk table='house' column='id'/>
         */
        house_id?: number;
    };
    inspection: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `house.id`.<fk table='house' column='id'/>
         */
        house_id?: number;
        /** Format: bigint */
        inspector_id?: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        inspection_date?: string;
        /** Format: character varying */
        notes?: string;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `inspection_status.id`.<fk table='inspection_status' column='id'/>
         */
        inspection_status_id?: number;
    };
    house: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /** Format: character varying */
        address?: string;
        /** Format: character varying */
        notes?: string;
        /** Format: date */
        construct_date?: string;
        /** Format: text */
        photo_url?: string;
    };
    attribute_trait: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `attribute_trait_type.id`.<fk table='attribute_trait_type' column='id'/>
         */
        attribute_trait_type_id?: number;
        /** Format: character varying */
        value?: string;
        /** Format: character varying */
        notes?: string;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `attribute.id`.<fk table='attribute' column='id'/>
         */
        attribute_id?: number;
    };
    room_type: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /** Format: character varying */
        name?: string;
    };
    photo: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `room.id`.<fk table='room' column='id'/>
         */
        room_id?: number;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `attribute.id`.<fk table='attribute' column='id'/>
         */
        attribute_id?: number;
        /** Format: character varying */
        notes?: string;
    };
    inspection_status: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /** Format: bigint */
        value?: number;
        /** Format: character varying */
        description?: string;
        /** Format: character varying */
        name?: string;
    };
    profile: {
        /**
         * Format: uuid
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: string;
        /** Format: timestamp with time zone */
        updated_at?: string;
        /** Format: text */
        username?: string;
        /** Format: text */
        avatar_url?: string;
        /** Format: text */
        website?: string;
    };
    attribute_trait_type: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /** Format: character varying */
        name?: string;
        /** Format: character varying */
        description?: string;
    };
    condition: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /** Format: character varying */
        name?: string;
        /** Format: character varying */
        description?: string;
        /** Format: bigint */
        value?: number;
    };
    attribute: {
        /**
         * Format: bigint
         * @description Note:
         * This is a Primary Key.<pk/>
         */
        id: number;
        /**
         * Format: timestamp with time zone
         * @default now()
         */
        created_at?: string;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `room.id`.<fk table='room' column='id'/>
         */
        room_id?: number;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `condition.id`.<fk table='condition' column='id'/>
         */
        condition_id?: number;
        /** Format: character varying */
        notes?: string;
        /**
         * Format: bigint
         * @description Note:
         * This is a Foreign Key to `attribute_type.id`.<fk table='attribute_type' column='id'/>
         */
        attribute_type_id?: number;
    };
}

export interface parameters {
    /**
     * @description Preference
     * @enum {string}
     */
    preferParams: "params=single-object";
    /**
     * @description Preference
     * @enum {string}
     */
    preferReturn: "return=representation" | "return=minimal" | "return=none";
    /**
     * @description Preference
     * @enum {string}
     */
    preferCount: "count=none";
    /** @description Filtering Columns */
    select: string;
    /** @description On Conflict */
    on_conflict: string;
    /** @description Ordering */
    order: string;
    /** @description Limiting and Pagination */
    range: string;
    /**
     * @description Limiting and Pagination
     * @default items
     */
    rangeUnit: string;
    /** @description Limiting and Pagination */
    offset: string;
    /** @description Limiting and Pagination */
    limit: string;
    /** @description attribute_type_trait_type */
    "body.attribute_type_trait_type": definitions["attribute_type_trait_type"];
    /** Format: bigint */
    "rowFilter.attribute_type_trait_type.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.attribute_type_trait_type.created_at": string;
    /** Format: bigint */
    "rowFilter.attribute_type_trait_type.attribute_type_id": string;
    /** Format: bigint */
    "rowFilter.attribute_type_trait_type.attribute_trait_id": string;
    /** @description attribute_type */
    "body.attribute_type": definitions["attribute_type"];
    /** Format: bigint */
    "rowFilter.attribute_type.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.attribute_type.created_at": string;
    /** Format: character varying */
    "rowFilter.attribute_type.name": string;
    /** @description room */
    "body.room": definitions["room"];
    /** Format: bigint */
    "rowFilter.room.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.room.created_at": string;
    /** Format: bigint */
    "rowFilter.room.inspection_id": string;
    /** Format: bigint */
    "rowFilter.room.room_type_id": string;
    /** Format: character varying */
    "rowFilter.room.name": string;
    /** Format: character varying */
    "rowFilter.room.description": string;
    /** Format: character varying */
    "rowFilter.room.notes": string;
    /** Format: bigint */
    "rowFilter.room.house_id": string;
    /** @description inspection */
    "body.inspection": definitions["inspection"];
    /** Format: bigint */
    "rowFilter.inspection.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.inspection.created_at": string;
    /** Format: bigint */
    "rowFilter.inspection.house_id": string;
    /** Format: bigint */
    "rowFilter.inspection.inspector_id": string;
    /** Format: timestamp with time zone */
    "rowFilter.inspection.inspection_date": string;
    /** Format: character varying */
    "rowFilter.inspection.notes": string;
    /** Format: bigint */
    "rowFilter.inspection.inspection_status_id": string;
    /** @description house */
    "body.house": definitions["house"];
    /** Format: bigint */
    "rowFilter.house.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.house.created_at": string;
    /** Format: character varying */
    "rowFilter.house.address": string;
    /** Format: character varying */
    "rowFilter.house.notes": string;
    /** Format: date */
    "rowFilter.house.construct_date": string;
    /** Format: text */
    "rowFilter.house.photo_url": string;
    /** @description attribute_trait */
    "body.attribute_trait": definitions["attribute_trait"];
    /** Format: bigint */
    "rowFilter.attribute_trait.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.attribute_trait.created_at": string;
    /** Format: bigint */
    "rowFilter.attribute_trait.attribute_trait_type_id": string;
    /** Format: character varying */
    "rowFilter.attribute_trait.value": string;
    /** Format: character varying */
    "rowFilter.attribute_trait.notes": string;
    /** Format: bigint */
    "rowFilter.attribute_trait.attribute_id": string;
    /** @description room_type */
    "body.room_type": definitions["room_type"];
    /** Format: bigint */
    "rowFilter.room_type.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.room_type.created_at": string;
    /** Format: character varying */
    "rowFilter.room_type.name": string;
    /** @description photo */
    "body.photo": definitions["photo"];
    /** Format: bigint */
    "rowFilter.photo.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.photo.created_at": string;
    /** Format: bigint */
    "rowFilter.photo.room_id": string;
    /** Format: bigint */
    "rowFilter.photo.attribute_id": string;
    /** Format: character varying */
    "rowFilter.photo.notes": string;
    /** @description inspection_status */
    "body.inspection_status": definitions["inspection_status"];
    /** Format: bigint */
    "rowFilter.inspection_status.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.inspection_status.created_at": string;
    /** Format: bigint */
    "rowFilter.inspection_status.value": string;
    /** Format: character varying */
    "rowFilter.inspection_status.description": string;
    /** Format: character varying */
    "rowFilter.inspection_status.name": string;
    /** @description profile */
    "body.profile": definitions["profile"];
    /** Format: uuid */
    "rowFilter.profile.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.profile.updated_at": string;
    /** Format: text */
    "rowFilter.profile.username": string;
    /** Format: text */
    "rowFilter.profile.avatar_url": string;
    /** Format: text */
    "rowFilter.profile.website": string;
    /** @description attribute_trait_type */
    "body.attribute_trait_type": definitions["attribute_trait_type"];
    /** Format: bigint */
    "rowFilter.attribute_trait_type.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.attribute_trait_type.created_at": string;
    /** Format: character varying */
    "rowFilter.attribute_trait_type.name": string;
    /** Format: character varying */
    "rowFilter.attribute_trait_type.description": string;
    /** @description condition */
    "body.condition": definitions["condition"];
    /** Format: bigint */
    "rowFilter.condition.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.condition.created_at": string;
    /** Format: character varying */
    "rowFilter.condition.name": string;
    /** Format: character varying */
    "rowFilter.condition.description": string;
    /** Format: bigint */
    "rowFilter.condition.value": string;
    /** @description attribute */
    "body.attribute": definitions["attribute"];
    /** Format: bigint */
    "rowFilter.attribute.id": string;
    /** Format: timestamp with time zone */
    "rowFilter.attribute.created_at": string;
    /** Format: bigint */
    "rowFilter.attribute.room_id": string;
    /** Format: bigint */
    "rowFilter.attribute.condition_id": string;
    /** Format: character varying */
    "rowFilter.attribute.notes": string;
    /** Format: bigint */
    "rowFilter.attribute.attribute_type_id": string;
}

export interface operations { }

export interface external { }
